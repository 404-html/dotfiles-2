#!/bin/bash
# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
[ -z "$PS1" ] && return


if hash tmux 2>/dev/null; then
    # Autostart tmux if ssh connecton.
    if [ -z "$TMUX" ] && [ "$SSH_CONNECTION" ];then
        if tmux has-session -t "ssh" &>/dev/null;then
            exec tmux attach -t "ssh"
        else
            exec tmux new -s "ssh"
        fi
    fi
fi

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# My fancy prompt
fancy_prompt=yes

if [ "$fancy_prompt" = yes ]; then
    return_status="\$(
            if [[ \$? == 0 ]]; then
                echo \"\[\033[0;32m\];)\";
            else
                echo \"\[\033[0;31m\];(\";
            fi
            )\[\033[00m\]"

    # Just in case
    unset host
    [ "$SSH_CONNECTION" ] && host=@$(hostname)
    if [ "$(id -u)" -eq 0 ];then
        color="\[\033[01;31m\]"
    else
        color="\[\033[01;32m\]"
    fi

    PS1="$return_status ${debian_chroot:+($debian_chroot)}$color\u$host\[\033[00m\]:\[\033[01;34m\]\W\[\033[00m\]"
    unset return_status host color
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w'
fi
unset fancy_prompt

if [ "$(id -u)" -eq 0 ];then
    PS1+='# '
else
    PS1+='$ '
fi

# If this is an xterm set the title to user@host:dir
case "$TERM" in
    xterm*|rxvt*)
        PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h:\W\a\]$PS1"
        ;;
    *)
        ;;
esac

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if [ -f /etc/bash_completion ] && ! shopt -oq posix; then
    . /etc/bash_completion
fi

# Apply dircolor theme. Should be done before the aliases.
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.sh_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.
if [ -r ~/.sh_aliases ] && ! [ -f ~/.noaliases ]; then
    . ~/.sh_aliases
fi

# fasd init
# https://github.com/clvv/fasd
if hash fasd 2>/dev/null; then
    eval "$(fasd --init auto)"
fi

if [ -e $HOME/.config/up/up.sh ]; then
    source ~/.config/up/up.sh
fi

#Bash opts.
shopt -s nocaseglob nocasematch extglob globstar 

# When rxvt and when not
if [[ "$TERM" == rxvt* ]];then
    # urxvt scroll buffer being stupid workaround.
    # https://superuser.com/questions/442589/xmonad-urxvt-issue-text-disappears-after-resizing
    if [ -z "$urxvt_debuged" ] ;then
        for (( i=1; i<=$LINES; i++ )); do
            echo
        done
        export urxvt_debuged=1
        clear
    fi
else
    [ -r "$HOME/.sh_theme" ] && source $HOME/.sh_theme
fi

motd() {

    [ -r ~/.sh_motd ] && cat ~/.sh_motd
    hash fortune 2>/dev/null && echo '  '$(fortune -s)
}

if ! shopt -q login_shell && ! [ -e ~/.hushlogin ];then
    motd
fi

true

