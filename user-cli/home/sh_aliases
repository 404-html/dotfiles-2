#!/bin/bash

if [ -e ~/.noaliases ]
then
       exit
fi

# Color definitions (taken from Color Bash Prompt HowTo).
# Some colors might look different of some terminals.
# For example, I see 'Bold Red' as 'orange' on my screen,
# hence the 'Green' 'BRed' 'Red' sequence I often use in my prompt.

# Normal Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

NC="\e[m"               # Color Reset

#
# Functions
#

changelog(){
    if (( $# != 1 )); then
        echo "Usage: ${FUNCNAME[0]} PACKAGE"
        return 1
    fi

    find -L "/usr/share/doc/$1" -type f -name 'changelog*.gz' -exec zless {} \; 2>/dev/null
}

path(){
    echo $PATH | tr -s ':' '\n'
}

libpath(){
    echo $LIB_LIBRARY_PATH | tr -s ':' '\n'
}

classpath(){
    echo $CLASS_PATH | tr -s ':' '\n'
}

#Backup File
bak(){
    cp "$1"{,".bak"}
}

#Find file in PWD.
ff(){
    find . -iname "*$1*"
}

# Handy Extract Program
extract(){
    if [ -f "$1" ] ; then
        case "$1" in
            *.tar.bz2)   tar xvjf "$1"     ;;
            *.tar.gz)    tar xvzf "$1"     ;;
            *.bz2)       bunzip2 "$1"      ;;
            *.rar)       unrar x "$1"      ;;
            *.gz)        gunzip "$1"       ;;
            *.tar)       tar xvf "$1"      ;;
            *.tbz2)      tar xvjf "$1"     ;;
            *.tgz)       tar xvzf "$1"     ;;
            *.zip)       unzip "$1"        ;;
            *.Z)         uncompress "$1"   ;;
            *.7z)        7z x "$1"         ;;
            *.deb)       dpkg-deb -x "$1" "${1%.deb}" ;;
            *)           echo "'$1' cannot be extracted via >extract<" ;;
        esac
    else
        echo "'$1' is not a valid file\!"
    fi
}

ii(){   # Get current host related info.
    {
        &>/dev/null hash grc && local g=grc

        echo -e "\nYou are logged on ${BRed}$(hostname)"
        echo -e "\n${BRed}Additionnal information:$NC " ; uname -a
        echo -e "\n${BRed}Users logged on:$NC " ; w -hs |
                 cut -d " " -f1 | sort | uniq
        echo -e "\n${BRed}Current date :$NC " ; date
        echo -e "\n${BRed}Machine stats :$NC " ; uptime
        echo -e "\n${BRed}Memory stats :$NC " ; free
        echo -e "\n${BRed}Diskspace :$NC " ; df -h / $HOME
        echo -e "\n${BRed}WAN IP Address :$NC" ; dig +short myip.opendns.com @resolver1.opendns.com
        echo -e "\n${BRed}Open connections :$NC "; $g netstat -np46l 2>/dev/null;
        echo
    } | less -R
}

loop(){       # Repeat n times command.
    if [ "$1" -gt 0 ] 2>/dev/null; then
        local i max
        max=$1;i=0; shift;
        while [ $i -ne $max ];do
            eval "$@";
        let i++
        done
    else
        while true; do
            eval "$@";
        done
    fi
}

add-alias(){
    echo "alias $1=\047$2\047" >> ~/.sh_aliases
}

sddev(){
    dev=${1%%[0-9]*}
    part=$1
    udisks --unmount "$part"
    udisks --detach "$dev"
}

rsa2host(){
    cat ~/.ssh/id_rsa.pub | ssh $1 'mkdir -pm 700 ~/.ssh; cat >> ~/.ssh/authorized_keys'
}

ps(){
    command ps "$@" |& less
}

tmux-new() {
  if [[ -n $TMUX ]]; then
    tmux new-window "$@"
  else
    tmux new-session "$@"
  fi
}

sleeptildate(){
    current_epoch=$(date +%s)
    target_epoch=$(date -d "$1" +%s)

    sleep_seconds=$(( $target_epoch - $current_epoch ))

    sleep $sleep_seconds
}

ytpl(){
    pl=$(echo $1 | sed 's/youtube.com\/.*list=/youtube.com\/playlist\?list=/')
    mpv --no-video --load-unsafe-playlists "$pl"
}

ytas() {
    query="$@"
    mpv --no-video --ytdl-format=bestaudio ytdl://ytsearch10:"$query"
}

secret-tool-create() {
    if [ "$#" -eq 3 ]; then
        secret-tool store --label="$1" "$2" "$3"
    else
        echo "Usage $0 label name key" >&2
    fi
}

# make a dir and cd into it
mcd () {
    mkdir -p "$@" && cd "$@"
}

ips () {
    # determine local IP address
    ifconfig | grep "inet" | awk '{ print $2 }'
}

if [ $ZSH_VERSION ];then
    function mandelbrot_fractal {
       local lines columns colour a b p q i pnew
       ((columns=COLUMNS-1, lines=LINES-1, colour=0))
       for ((b=-1.5; b<=1.5; b+=3.0/lines)) do
           for ((a=-2.0; a<=1; a+=3.0/columns)) do
               for ((p=0.0, q=0.0, i=0; p*p+q*q < 4 && i < 32; i++)) do
                   ((pnew=p*p-q*q+a, q=2*p*q+b, p=pnew))
               done
               ((colour=(i/4)%8))
                echo -n "\\e[4${colour}m "
            done
            echo
        done
    }
fi

dotfile() {

    [ "$#" -ne 2 ] && >&2 echo "Error: Usage $0 <file> <dir>" && exit 1
    ! [ -f "$1" ] && >&2 echo "Error: Unable to read file" && exit 1
    ! [ -d "$2" ] && >&2 echo "Error: Unable to read dir" && exit 1

    fname=$(basename $1)
    fname=${fname#.} 
    dpath="${2}/${fname}"
    spath="$1"

    mv -nv "${spath}" "${dpath}"
    ln -nvsr "${dpath}" "${spath}"
}

# Swap 2 filenames around, if they exist (from Uzi's bashrc).
swap() {
    local TMPFILE=tmp.$$

    [ $# -ne 2  ] && echo "swap: 2 arguments needed" && return 1
    [ ! -e $1  ] && echo "swap: $1 does not exist" && return 1
    [ ! -e $2  ] && echo "swap: $2 does not exist" && return 1

    mv "$1" $TMPFILE
    mv "$2" "$1"
    mv $TMPFILE "$2"
}


# sshvnc command from the ssvnc package does this for me.
#ssh+vnc(){                                                                                                                                                                                 ;)
#    ssh -CL 5900:localhost:5900 "$1" 'x11vnc -nopw -forever -localhost --display :0' &
#    pid=$!
#    sleep 1
#    vncviewer localhost
#    kill $pid
#}

#
# Aliases
#

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    # egrep ftw.
    alias grep='egrep --binary-files=without-match --color=auto'
    alias fgrep='fgrep --binary-files=without-match --color=auto'
    alias egrep='egrep  --binary-files=without-match --color=auto'

    alias diff='diff --color=auto'
    alias dmesg='dmesg --color=auto'
fi

# Give less colors. Since man uses less by default, 
# this gives man colors too =D
export LESS=-R
export LESS_TERMCAP_md=$'\E[1;31m'     # begin bold
export LESS_TERMCAP_me=$'\E[0m'        # reset bold/blink
export LESS_TERMCAP_ue=$'\E[0m'        # reset underline
export LESS_TERMCAP_us=$'\E[1;32m'     # begin underline

# Prefer neovim, accept vim
if hash nvim 2>/dev/null; then
    neo="n"
fi

alias vi=${neo}'vim'
alias vim=${neo}'vim'
alias view=${neo}'vim -R'
alias vimdiff=${neo}'vim -d'
alias lshpa='hdparm -N'
alias udevmon='udevadm monitor --environment --udev'
alias lsblk='lsblk -o name,model,fstype,size,label,uuid,mountpoint'

# I use the clipboard buffer.
alias xclip='xclip -selection clipboard'

alias httpserver='python3 -m http.server'
alias ftpserver='python3 -m pyftpdlib'
alias vncserver='x11vnc -forever -nopw -display $DISPLAY'
alias gdb='gdb -q'
alias ddwatch='watch -n5 "kill -USR1 $(pgrep ^dd)"'
alias pdfgrep='pdfgrep -ic'
alias mkdir='mkdir -p'
alias mysql-ist='mysql -h $(secret-tool lookup istdb host) -p$(secret-tool lookup istdb pass) -u $(secret-tool lookup istdb user) $(secret-tool lookup istdb user)'
alias fdate='date --iso-8601=minute'
alias matlab-cli='matlab -nodesktop -nosplash'
alias rot13="tr a-zA-Z n-za-mN-ZA-M"
alias logsize="du -hs /var/log/* 2>/dev/null | egrep '^[.0-9]*[MG]'"
alias syslog="tailf /var/log/syslog"
alias sdu="du -hs * .??* | egrep '^[0-9.]+[MG]'"
alias vimrc='vim ~/.vimrc'
alias bashrc='vim ~/.bashrc'
alias sh_aliases='vim ~/.sh_aliases'
alias aliases='vim ~/.sh_aliases'
alias zshrc='vim ~/.zshrc'
alias profile='vim ~/.profile'
alias zprofile='vim ~/.zprofile'
alias genpw='< /dev/urandom tr -dc \!-\~ | head -c30'

# Add an "alert" alias for long running commands.  Use like so: sleep 10; alert
if [ $ZSH_VERSION ];then
    alias alert='notify-send $history[$HISTCMD]'
else
    alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'
fi

alias ll='ls -lFh'
alias la='ls -alFh'
alias l='ls -CF'
alias ne='2>/dev/null'
alias rm='rm -v'
alias cp='cp -iva'
alias mv='mv -iv'
alias tp='trash-put'
alias trash-restore='restore-trash'
alias wanip='dig +short myip.opendns.com @resolver1.opendns.com'
alias px='ps x'
alias offline='unshare -n'

# Because dcfldd is hard to remember.
alias dd='dcfldd'

alias gunzip='gunzip -k'
alias we='dolphin $PWD'
alias xo='xdg-open'
alias urldecode='python -c "import sys, urllib as ul; print ul.unquote_plus(sys.argv[1])"'
alias urlencode='python -c "import sys, urllib as ul; print ul.quote_plus(sys.argv[1])"'
alias resolv='cat /etc/resolv.conf'
alias latexidff='latexdiff --exclude-textcmd="section,subsection,chapter"'
alias weather="curl http://wttr.in/"

# Thunderbird doesn't seem to like my gtk2 theme (numix).
# Update: Not anymore
#alias thunderbird='env GTK2_RC_FILES=/usr/share/themes/Adwaita/gtk-2.0/gtkrc thunderbird'
# Neither does firefox (gtk3 in nightly build)
#alias firefox='env GTK_THEME=Adwaita firefox'

# grcat aliases
if hash grc 2>/dev/null; then
    alias cvs='\grc cvs'
    alias df='\grc df'
    alias esperanto='\grc esperanto'
    alias gcc='\grc gcc'
    alias irclog='\grc irclog'
    alias ldap='\grc ldap'
    alias log='\grc log'
    alias mount='\grc mount'
    alias mysql_pager='\grc mysql_pager'
    alias netstat='\grc netstat'
    alias ping='\grc ping'
    alias proftpd='\grc proftpd'
    alias traceroute='\grc traceroute'
    alias wdiff='\grc wdiff'
fi

# Super usefull...
alias forkbomb=':(){ :|:& };:'

####### FASD ALIAS ######
alias v="f -e ${neo}vim" # quick opening files with vim
alias vr="f -e ${neo}vim -R" # quick opening files with vim
alias m='f -e mplayer' # quick opening files with mplayer
alias o='f -e xdg-open' # quick opening files with xdg-open

# Easy to forget cmds
alias inxi='inxi -F'
alias lsfs='dumpe2fs'
alias lsefi='efibootmgr -v'
alias modfs='tune2fs'
alias cssh='cssh'
alias lsbios='biosdecode'
alias ag='ag'

#MSP
alias mspdebug-cc='LD_LIBRARY_PATH=$HOME/.opt/ti/ccsv6/ccs_base/DebugServer/drivers/:$HOME/.opt/msptexas/lib $HOME/.opt/msptexas/bin/mspdebug tilib'
alias mspdebug-eg='LD_LIBRARY_PATH=$HOME/.opt/energia-0101E0017/hardware/tools/msp430/bin mspdebug tilib'

alias upg='tmux-new "apt upgrade -y && apt autoremove; apt clean; read"'
alias ytdl='youtube-dl --title --ignore-errors --merge-output-format mkv --no-mtime -f bestvideo+bestaudio --sub-lang en,pt --write-sub --embed-subs --convert-subs srt'
alias ffmpeg='ffmpeg -hide_banner'
alias dirty='watch grep -e Dirty: -e Writeback: /proc/meminfo'
alias su='su --login'

alias color-palette='(x=`tput op` y=`printf %76s`;for i in {0..256};do o=00$i;echo -e ${o:${#o}-3:3} `tput setaf $i;tput setab $i`${y// /=}$x;done)'
alias term-caps="infocmp -1 | sed -nu 's/^[ \000\t ]*//;s/[ \000\t ]*$//;/[^ \t\000]\{1,\}/!d;/acsc/d;s/=.*,//p'|column -c80"
alias tree='tree -Csh'
alias du='du -h'
alias df='df -Th'
