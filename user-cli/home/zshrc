#!/bin/zsh
# Only for interactive shells.
[[ -o interactive ]] || exit 0

if hash tmux 2>/dev/null; then
    # Auto-start TMUX in SSH.
    if [ "$SSH_CONNECTION" ] && [ -z "$TMUX" ];then
        tmux has-session -t ssh &>/dev/null && exec tmux attach -t ssh || exec tmux new -s ssh
    fi
fi

FRAMEWORK=prezto
if [ $FRAMEWORK = prezto ];then

    # Source Prezto.
    # https://github.com/sorin-ionescu/prezto
    if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
        source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
    fi

elif [ $FRAMEWORK = oh-my-zsh ];then

    # Source oh-my-zsh
    # https://github.com/robbyrussell/oh-my-zsh
    if [ -r $HOME/.oh-my-zshrc ];then
        source $HOME/.oh-my-zshrc
    fi
fi


# Add help command
autoload -U run-help
autoload run-help-git
autoload run-help-svn
autoload run-help-svk
alias help=run-help

# More Globs
setopt EXTENDED_GLOB
# 10 second wait if you do something that will delete everything. 
# I wish I'd had this before...
setopt RM_STAR_WAIT
# Disable Substituition verification
unsetopt HIST_VERIFY NO_CLOBBER AUTO_CD
# If we have a glob this will expand it
setopt GLOB_COMPLETE
setopt PUSHD_MINUS
# This makes cd=pushd
setopt AUTO_PUSHD
# Don't save duplicates entries in history
setopt HISTIGNOREDUPS
# Don't save history entries that start with a space
setopt HISTIGNORESPACE

# fasd init
# https://github.com/clvv/fasd
if hash fasd 2>/dev/null; then
    eval "$(fasd --init auto)"
fi

if [ -e $HOME/.config/up/up.sh ]; then
    source ~/.config/up/up.sh
fi

# ctrl-u does the same it did in bash.
bindkey \^U backward-kill-line

# When rxvt and when not
if [[ "$TERM" == rxvt* ]];then
    # urxvt scroll buffer being stupid workaround.
    # https://superuser.com/questions/442589/xmonad-urxvt-issue-text-disappears-after-resizing
    if [ -z "$urxvt_debuged" ] ;then
        for (( i=1; i<=$LINES; i++ )); do
            echo
        done
        export urxvt_debuged=1
        clear
    fi
else
    [ -r "$HOME/.sh_theme" ] && source $HOME/.sh_theme
fi

# Apply dircolor theme. Should be done before the aliases.
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
fi

if [ -r ~/.sh_aliases ];then
    source ~/.sh_aliases
fi

# Workaround #
# Make zsh autocomplete respect dircolors.
# https://github.com/robbyrussell/oh-my-zsh/issues/1563
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}

# ZSH globs cheat sheet
#
# ls *(.)            # list just regular files
# ls *(/)            # list just directories
# ls -ld *(/om[1,3]) # Show three newest directories. "om" orders by modification. "[1,3]" works like Python slice.
# rm -i *(.L0)       # Remove zero length files, prompt for each file
# ls *(^m0)          # Files not modified today.
# emacs **/main.py   # Edit main.py, wherever it is in this directory tree. ** is great.
# ls **/*(.x)        # List all executable files in this tree
# ls *~*.*(.)        # List all files that does not have a dot in the filename
# ls -l */**(Lk+100) # List all files larger than 100kb in this tree
# ls DATA_[0-9](#c4,7).csv # List DATA_nnnn.csv to DATA_nnnnnnn.csv

function bashmotd()
{
    [ -r ~/.sh_motd ] && cat ~/.sh_motd
    hash fortune 2>/dev/null && echo '  '$(fortune -s)
}

if ! [[ -o login ]] && ! [ -e ~/.hushlogin ];then
    bashmotd
fi

true

